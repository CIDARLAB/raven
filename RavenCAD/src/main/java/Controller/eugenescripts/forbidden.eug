//Find all intermediates that are less than 200bp
include "/Users/evanappleton/dfx/ClothoSDSViewer/src/eugenescripts/parts.h";
include "/Users/evanappleton/dfx/ClothoSDSViewer/src/eugenescripts/fn_library.h";

//Search a list of devices to see if they are too small to be constructed
function Device[] forbiddenTest(Device[] devices, num n) {
	Device[] failDevices;

	//For each of the devices in the array
	for (num i = 0; i < devices.size(); i++) {
		Device dev = devices[i];
		dev.name = "dev_" + i;	
	    
		//Go through all the parts in a device and record the length
		num count = 0;
		for (num j = 0; j < dev.size(); j++) {
			txt seq = dev[j].Sequence;
			num toAdd = seq.size();
			count = count + toAdd;
		}
		
		//If the length of the device surpasses n
		if (count < n) {
			failDevices.add(dev);
		}
	}
	return failDevices;
}

//Run the test for all input goal parts
Device[] forbs;
for (num i = 0; i < devices.size(); i++) {
	Device[] ints = getInts(devices[i]);
	println("Found intermediates for a device");
	Device[] theseForbs = forbiddenTest(ints, 210);
	println("Ran the test on the intermediates");
	for (num j = 0; j < theseForbs.size(); j++) {
		Device aForb = theseForbs[j];
		aForb.name = "aForb_"+j;				
		forbs.add(aForb);
	}
	println("Added devices to output array");
}

save(forbs);
