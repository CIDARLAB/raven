//Find all intermediates that are transcriptional units with reporters
include "/Users/evanappleton/dfx/ClothoSDSViewer/src/eugenescripts/parts.h";
include "/Users/evanappleton/dfx/ClothoSDSViewer/src/eugenescripts/fn_library.h";

//Search a list of devices to see if they pass the recommended test
function Device[] requiredTest(Device[] d) {
	Device[] reqDevices;

	//For each of the devices in the array
	for (num i = 0; i < d.size(); i++) {
		Device Dev = d[i];

		//Rule declaration
		Rule req1 (Dev STARTSWITH Promoter);
		Rule req2 (Dev ENDSWITH Terminator);
		Rule req3 (Reporter MORETHAN 0);

		//If the device passes all rules
		if ((req1 AND req2) AND req3) {
			//println(Dev);
			reqDevices.add(Dev);
		}
	}
	return reqDevices;
}

//Run the test for all input goal parts
Device[] reqs;
for (num i = 0; i < devices.size(); i++) {
	Device[] ints = getInts(devices[i]);
	Device[] theseReqs = requiredTest(ints);
	for (num j = 0; j < theseReqs.size(); j++) {
		Device aReq = theseReqs[j];
		aReq.name = "aReq_" + j;
		reqs.add(aReq);
	}
}

save(reqs);